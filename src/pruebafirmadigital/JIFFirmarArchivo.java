/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pruebafirmadigital;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.InvalidKeyException;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PrivateKey;
import java.security.Signature;
import java.security.SignatureException;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class JIFFirmarArchivo extends javax.swing.JInternalFrame {

    PrivateKey privateKey;
    public JIFFirmarArchivo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JBArchivo = new javax.swing.JButton();
        JLArchivo = new javax.swing.JLabel();
        JBLlave = new javax.swing.JButton();
        JLLlave = new javax.swing.JLabel();

        setClosable(true);
        setTitle("FIRMAR ARCHIVO");

        JBArchivo.setText("Seleccionar Archivo a Firmar");
        JBArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBArchivoActionPerformed(evt);
            }
        });

        JLArchivo.setText("ARCHIVO:");

        JBLlave.setText("Seleccionar Llave Privada");
        JBLlave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBLlaveActionPerformed(evt);
            }
        });

        JLLlave.setText("LLAVE PRIVADA:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLLlave)
                    .addComponent(JBLlave)
                    .addComponent(JLArchivo)
                    .addComponent(JBArchivo))
                .addContainerGap(631, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(JBLlave)
                .addGap(18, 18, 18)
                .addComponent(JLLlave)
                .addGap(18, 18, 18)
                .addComponent(JBArchivo)
                .addGap(18, 18, 18)
                .addComponent(JLArchivo)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBLlaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBLlaveActionPerformed
        JFileChooser Llave = new JFileChooser();
        
        Llave.setFileSelectionMode( JFileChooser.FILES_ONLY ); 
        int seleccion = Llave.showOpenDialog( this );

        if( seleccion == JFileChooser.APPROVE_OPTION ){
            FileInputStream keyfis = null;
            try {                
                JLLlave.setText("LLAVE PRIVADA: "+Llave.getSelectedFile().getAbsoluteFile());
                keyfis = new FileInputStream(Llave.getSelectedFile().getAbsoluteFile());
                byte[] encKey = new byte[keyfis.available()];
                keyfis.read(encKey);
                keyfis.close();
                PKCS8EncodedKeySpec pubKeySpec = new PKCS8EncodedKeySpec(encKey);
                KeyFactory keyFactory = KeyFactory.getInstance("DSA", "SUN");
                privateKey = keyFactory.generatePrivate(pubKeySpec);
                keyfis.close();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL CARGAR LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
                
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL CARGAR LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchAlgorithmException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL CARGAR LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchProviderException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL CARGAR LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeySpecException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL CARGAR LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_JBLlaveActionPerformed

    private void JBArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBArchivoActionPerformed
        JFileChooser Archivo = new JFileChooser();
        
        Archivo.setFileSelectionMode( JFileChooser.FILES_ONLY ); 
        int seleccion = Archivo.showOpenDialog( this );

        if( seleccion == JFileChooser.APPROVE_OPTION ){
            try {
                JLArchivo.setText("ARCHIVO: "+Archivo.getSelectedFile().getAbsoluteFile());
                
                Signature dsa = Signature.getInstance("SHA256withDSA", "SUN");
                dsa.initSign(privateKey);
                
                File origen = new File(Archivo.getSelectedFile().getAbsoluteFile()+"");
                File destino = new File("./claves/"+Archivo.getSelectedFile().getName());
                try {
                    InputStream in = new FileInputStream(origen);
                    OutputStream out = new FileOutputStream(destino);

                    byte[] buf = new byte[1024];
                    int len;

                    while ((len = in.read(buf)) > 0) {
                            out.write(buf, 0, len);
                    }

                    in.close();
                    out.close();
                } catch (IOException ioe){
                        ioe.printStackTrace();
                }
                
                FileInputStream fis = new FileInputStream(Archivo.getSelectedFile().getAbsoluteFile());                
                BufferedInputStream bufin = new BufferedInputStream(fis);
                byte[] buffer = new byte[1024];
                int len;
                while ((len = bufin.read(buffer)) >= 0) {
                    dsa.update(buffer, 0, len);
                };
                bufin.close();
                
                byte[] realSig = dsa.sign();
                
                /* save the signature in a file */
                FileOutputStream sigfos = new FileOutputStream("./claves/"+Archivo.getSelectedFile().getName()+"_CERTIFICADO");
                sigfos.write(realSig);
                sigfos.close();
                
                JOptionPane.showMessageDialog(this,"Se creo el certificado: "+Archivo.getSelectedFile().getName()+"_CERTIFICADO");
                
            } 
            catch (NoSuchAlgorithmException ex) {
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL FRIMAR CON LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);                
            } 
            catch (NoSuchProviderException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL FRIMAR CON LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (InvalidKeyException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL FRIMAR CON LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL FRIMAR CON LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (IOException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL FRIMAR CON LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (SignatureException ex) {
                JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL FRIMAR CON LLAVE PRIVADA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(JIFFirmarArchivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_JBArchivoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBArchivo;
    private javax.swing.JButton JBLlave;
    private javax.swing.JLabel JLArchivo;
    private javax.swing.JLabel JLLlave;
    // End of variables declaration//GEN-END:variables
}
