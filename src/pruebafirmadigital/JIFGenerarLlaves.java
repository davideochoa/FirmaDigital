/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pruebafirmadigital;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class JIFGenerarLlaves extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFGenerarLlaves
     */
    public JIFGenerarLlaves() {
        initComponents();
        pack();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JLLlavePrivada = new javax.swing.JLabel();
        JLLlavePublica = new javax.swing.JLabel();
        JLNombreArchivos = new javax.swing.JLabel();
        JTFNombreArchivo = new javax.swing.JTextField();
        JBGenerarLlaves = new javax.swing.JButton();

        setClosable(true);
        setTitle("GENERAR LLAVES");
        setMinimumSize(new java.awt.Dimension(100, 100));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Llaves Generadas"));

        JLLlavePrivada.setText("Llave Privada:");

        JLLlavePublica.setText("Llave Publica:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLLlavePublica)
                    .addComponent(JLLlavePrivada))
                .addContainerGap(581, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JLLlavePrivada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(JLLlavePublica)
                .addGap(24, 24, 24))
        );

        JLNombreArchivos.setText("NombreArchivos:");

        JBGenerarLlaves.setText("Generar");
        JBGenerarLlaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBGenerarLlavesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JLNombreArchivos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JBGenerarLlaves)
                            .addComponent(JTFNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLNombreArchivos)
                    .addComponent(JTFNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(JBGenerarLlaves)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBGenerarLlavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBGenerarLlavesActionPerformed
        try {
            String nombreArchivo = JTFNombreArchivo.getText().toUpperCase();
            
            //KeyPairGenerator keyGen = KeyPairGenerator.getInstance("DSA","SUN");
            KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA","SunRsaSign");
            
            SecureRandom random = SecureRandom.getInstance("SHA1PRNG","SUN");
            keyGen.initialize(1024, random);
            
            KeyPair pair = keyGen.generateKeyPair();
            PrivateKey priv = pair.getPrivate();
            PublicKey pub = pair.getPublic();
            
            /* save the public key in a file */
            byte[] key = pub.getEncoded();
            FileOutputStream keyfos = new FileOutputStream("./Llaves/"+nombreArchivo+"KeyPublic");
            keyfos.write(key);
            keyfos.close();

            /* save the private key in a file */
            byte[] keypriv = priv.getEncoded();
            FileOutputStream keyprivfos = new FileOutputStream("./Llaves/"+nombreArchivo+"KeyPrivate");
            keyprivfos.write(keypriv);
            keyprivfos.close();
            
            JLLlavePrivada.setText("Llave Privada:"+nombreArchivo+"KeyPrivate");
            JLLlavePublica.setText("Llave Publica:"+nombreArchivo+"KeyPublic");            
            
        }catch (NoSuchAlgorithmException ex) {
            JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL GENERAR LLAVES PRIVADA Y PUBLICA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(JIFGenerarLlaves.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Logger.getLogger(JIFGenerarLlaves.class.getName()).log(Level.SEVERE, null, ex);
         catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL GENERAR LLAVES PRIVADA Y PUBLICA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(JIFGenerarLlaves.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this,
                                                ex.getMessage(),
                                                "ERROR AL GENERAR LLAVES PRIVADA Y PUBLICA",                                                                                                
                                                JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(JIFGenerarLlaves.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchProviderException ex) {
            Logger.getLogger(JIFGenerarLlaves.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JBGenerarLlavesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBGenerarLlaves;
    private javax.swing.JLabel JLLlavePrivada;
    private javax.swing.JLabel JLLlavePublica;
    private javax.swing.JLabel JLNombreArchivos;
    private javax.swing.JTextField JTFNombreArchivo;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
